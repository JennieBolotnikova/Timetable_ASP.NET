// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimetableApp.DataAccess;

namespace TimetableApp.DataAccess.Migrations
{
    [DbContext(typeof(TimetableContext))]
    [Migration("20211130161017_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.ActivityType", b =>
                {
                    b.Property<int>("ActivityTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityTypesShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityTypeID");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Bell", b =>
                {
                    b.Property<int>("BellID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("LessonEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("LessonStartTime")
                        .HasColumnType("time");

                    b.HasKey("BellID");

                    b.ToTable("Bells");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Classroom", b =>
                {
                    b.Property<int>("ClassroomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomNumber")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomTypeID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("ClassroomID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("ClassroomTypeID");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.ClassroomType", b =>
                {
                    b.Property<int>("ClassroomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassroomTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassroomTypeID");

                    b.ToTable("ClassroomTypes");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Day", b =>
                {
                    b.Property<int>("DayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayID");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Discipline", b =>
                {
                    b.Property<int>("DisciplineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisciplineNmae")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DisciplineID");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Faculty", b =>
                {
                    b.Property<int>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyID");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.HasKey("GroupID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Semester", b =>
                {
                    b.Property<int>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.Property<string>("SemesterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterID");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Timetable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityTypeID")
                        .HasColumnType("int");

                    b.Property<int>("BellID")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayID")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineID")
                        .HasColumnType("int");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ActivityTypeID");

                    b.HasIndex("BellID");

                    b.HasIndex("ClassroomID");

                    b.HasIndex("DayID");

                    b.HasIndex("DisciplineID");

                    b.HasIndex("GroupID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Classroom", b =>
                {
                    b.HasOne("TimetableApp.DataAccess.Entities.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.ClassroomType", "ClassroomType")
                        .WithMany()
                        .HasForeignKey("ClassroomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("ClassroomType");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Group", b =>
                {
                    b.HasOne("TimetableApp.DataAccess.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("TimetableApp.DataAccess.Entities.Timetable", b =>
                {
                    b.HasOne("TimetableApp.DataAccess.Entities.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Bell", "Bell")
                        .WithMany()
                        .HasForeignKey("BellID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Day", "Day")
                        .WithMany()
                        .HasForeignKey("DayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimetableApp.DataAccess.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityType");

                    b.Navigation("Bell");

                    b.Navigation("Classroom");

                    b.Navigation("Day");

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Semester");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
